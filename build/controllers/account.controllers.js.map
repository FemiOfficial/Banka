{"version":3,"sources":["../../server/controllers/account.controllers.js"],"names":["AccountControllers","req","res","AccountService","createAccount","body","data","status","statusCodes","conflict","json","errors","created","serverError","error","patchAccount","params","accountNumber","notFound","success","deleteAccount","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;IAMMA,kB;;;;;;;;;;AACJ;;;;;;;;;;;oDAQ2BC,G,EAAKC,G;;;;;;;;uBAETC,oBAAeC,aAAf,CAA6BH,GAAG,CAACI,IAAjC,C;;;AAAbC,gBAAAA,I;;oBACDA,I;;;;;iDACIJ,GAAG,CAACK,MAAJ,CAAWC,wBAAYC,QAAvB,EAAiCC,IAAjC,CAAsC;AAC3CH,kBAAAA,MAAM,EAAEC,wBAAYC,QADuB;AAE3CE,kBAAAA,MAAM,EAAE;AAFmC,iBAAtC,C;;;iDAKFT,GAAG,CAACK,MAAJ,CAAWC,wBAAYI,OAAvB,EAAgCF,IAAhC,CACL;AACEH,kBAAAA,MAAM,EAAEC,wBAAYI,OADtB;AAEEN,kBAAAA,IAAI,EAAJA;AAFF,iBADK,C;;;;;iDAOAJ,GAAG,CAACK,MAAJ,CAAWC,wBAAYK,WAAvB,EAAoCH,IAApC,CACL;AACEI,kBAAAA,KAAK,EAAE;AADT,iBADK,C;;;;;;;;;;;;;;;;AAQX;;;;;;;;;;;;;;qDAQ0Bb,G,EAAKC,G;;;;;;;;;uBAEAC,oBAAeY,YAAf,CAA4Bd,GAAG,CAACI,IAAhC,EAAsCJ,GAAG,CAACe,MAAJ,CAAWC,aAAjD,C;;;AAArBF,gBAAAA,c;;oBACDA,c;;;;;kDACIb,GAAG,CAACK,MAAJ,CAAWC,wBAAYU,QAAvB,EAAiCR,IAAjC,CAAsC;AAC3CH,kBAAAA,MAAM,EAAEC,wBAAYU,QADuB;AAE3CP,kBAAAA,MAAM,EAAE;AAFmC,iBAAtC,C;;;kDAKFT,GAAG,CAACK,MAAJ,CAAWC,wBAAYW,OAAvB,EAAgCT,IAAhC,CACL;AACEH,kBAAAA,MAAM,EAAEC,wBAAYW,OADtB;AAEEb,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,MAAM,EAAEQ,cAAY,CAACR,MADjB;AAEJU,oBAAAA,aAAa,EAAEF,cAAY,CAACE;AAFxB;AAFR,iBADK,C;;;;;kDAUAf,GAAG,CAACK,MAAJ,CAAWC,wBAAYK,WAAvB,EAAoCH,IAApC,CACL;AACEI,kBAAAA,KAAK,EAAE;AADT,iBADK,C;;;;;;;;;;;;;;;;AAQX;;;;;;;;;;;;;;qDAQ2Bb,G,EAAKC,G;;;;;;;;;uBAEAC,oBAAeiB,aAAf,CAA6BnB,GAAG,CAACe,MAAJ,CAAWC,aAAxC,C;;;AAAtBG,gBAAAA,e;;oBACDA,e;;;;;kDACIlB,GAAG,CAACK,MAAJ,CAAWC,wBAAYU,QAAvB,EAAiCR,IAAjC,CAAsC;AAC3CH,kBAAAA,MAAM,EAAEC,wBAAYU,QADuB;AAE3CP,kBAAAA,MAAM,EAAE;AAFmC,iBAAtC,C;;;kDAKFT,GAAG,CAACK,MAAJ,CAAWC,wBAAYW,OAAvB,EAAgCT,IAAhC,CACL;AACEH,kBAAAA,MAAM,EAAEC,wBAAYW,OADtB;AAEEb,kBAAAA,IAAI,EAAE;AACJe,oBAAAA,OAAO,EAAE;AADL;AAFR,iBADK,C;;;;;kDASAnB,GAAG,CAACK,MAAJ,CAAWC,wBAAYK,WAAvB,EAAoCH,IAApC,CACL;AACEI,kBAAAA,KAAK,EAAE;AADT,iBADK,C;;;;;;;;;;;;;;;;;;;;eAUEd,kB","sourcesContent":["import AccountService from '../services/account.services';\r\nimport Authentication from '../middlewares/authentication';\r\nimport statusCodes from '../helpers/statusCodes';\r\n\r\n/**\r\n *\r\n * @class AccountControllers\r\n *\r\n */\r\n\r\nclass AccountControllers {\r\n  /**\r\n   *\r\n    * @static\r\n    * @param {*} req\r\n    * @param {*} res\r\n    * @memberof AccountControllers\r\n    * @returns {Object} CreatedAccount\r\n    */\r\n  static async createAccount(req, res) {\r\n    try {\r\n      const data = await AccountService.createAccount(req.body);\r\n      if (!data) {\r\n        return res.status(statusCodes.conflict).json({\r\n          status: statusCodes.conflict,\r\n          errors: 'please enter a valid email',\r\n        });\r\n      }\r\n      return res.status(statusCodes.created).json(\r\n        {\r\n          status: statusCodes.created,\r\n          data,\r\n        },\r\n      );\r\n    } catch (error) {\r\n      return res.status(statusCodes.serverError).json(\r\n        {\r\n          error: 'Internal server error',\r\n        },\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n    * @static\r\n    * @param {*} req\r\n    * @param {*} res\r\n    * @memberof AccountControllers\r\n    * @returns {Object} newStatus\r\n    */\r\n  static async patchAccount(req, res) {\r\n    try {\r\n      const patchAccount = await AccountService.patchAccount(req.body, req.params.accountNumber);\r\n      if (!patchAccount) {\r\n        return res.status(statusCodes.notFound).json({\r\n          status: statusCodes.notFound,\r\n          errors: 'account not found',\r\n        });\r\n      }\r\n      return res.status(statusCodes.success).json(\r\n        {\r\n          status: statusCodes.success,\r\n          data: {\r\n            status: patchAccount.status,\r\n            accountNumber: patchAccount.accountNumber,\r\n          },\r\n        },\r\n      );\r\n    } catch (error) {\r\n      return res.status(statusCodes.serverError).json(\r\n        {\r\n          error: 'Internal server error',\r\n        },\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n    * @static\r\n    * @param {*} req\r\n    * @param {*} res\r\n    * @memberof AccountControllers\r\n    * @returns {Object} reponse\r\n    */\r\n  static async deleteAccount(req, res) {\r\n    try {\r\n      const deleteAccount = await AccountService.deleteAccount(req.params.accountNumber);\r\n      if (!deleteAccount) {\r\n        return res.status(statusCodes.notFound).json({\r\n          status: statusCodes.notFound,\r\n          errors: 'account not found',\r\n        });\r\n      }\r\n      return res.status(statusCodes.success).json(\r\n        {\r\n          status: statusCodes.success,\r\n          data: {\r\n            message: 'account successfully deleted',\r\n          },\r\n        },\r\n      );\r\n    } catch (e) {\r\n      return res.status(statusCodes.serverError).json(\r\n        {\r\n          error: 'Internal server error',\r\n        },\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default AccountControllers;\r\n"],"file":"account.controllers.js"}