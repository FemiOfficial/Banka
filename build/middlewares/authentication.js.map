{"version":3,"sources":["../../server/middlewares/authentication.js"],"names":["Authentication","verifyToken","req","res","next","authToken","body","token","query","headers","Authorization","authorization","split","status","statusCodes","forbidden","json","error","user","TokenOperations","verify","unAuthorized"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,cAAc,GAAG;AACrBC,EAAAA,WADqB,uBACTC,GADS,EACJC,GADI,EACCC,IADD,EACO;AAC1B,QAAMC,SAAS,GAAGH,GAAG,CAACI,IAAJ,CAASC,KAAT,IAAkBL,GAAG,CAACM,KAAJ,CAAUD,KAA5B,IAAqCL,GAAG,CAACO,OAAJ,CAAY,gBAAZ,CAArC,IAAsEP,GAAG,CAACO,OAAJ,CAAYC,aAAlF,IAAmGR,GAAG,CAACO,OAAJ,CAAYE,aAAjI;;AACA,QAAIN,SAAJ,EAAe;AACb,UAAME,KAAK,GAAGF,SAAS,CAACO,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAd;;AACA,UAAI,CAACL,KAAL,EAAY;AACV,eAAOJ,GAAG,CAACU,MAAJ,CAAWC,wBAAYC,SAAvB,EAAkCC,IAAlC,CAAuC;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAvC,CAAP;AACD;;AAED,UAAMC,IAAI,GAAGC,4BAAgBC,MAAhB,CAAuBb,KAAvB,CAAb;;AACA,UAAI,CAACW,IAAL,EAAW;AACT,eAAOf,GAAG,CAACU,MAAJ,CAAWC,wBAAYO,YAAvB,EAAqCL,IAArC,CAA0C;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA1C,CAAP;AACD;;AACDf,MAAAA,GAAG,CAACgB,IAAJ,GAAWA,IAAX;AACA,aAAOd,IAAI,EAAX;AACD;;AACD,WAAOD,GAAG,CAACU,MAAJ,CAAWC,wBAAYO,YAAvB,EAAqCL,IAArC,CAA0C;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA1C,CAAP;AACD;AAjBoB,CAAvB;eAoBejB,c","sourcesContent":["import statusCodes from '../helpers/statusCodes';\r\nimport TokenOperations from '../helpers/tokenOperations';\r\n\r\nconst Authentication = {\r\n  verifyToken(req, res, next) {\r\n    const authToken = req.body.token || req.query.token || req.headers['x-access-token'] || req.headers.Authorization || req.headers.authorization;\r\n    if (authToken) {\r\n      const token = authToken.split(' ')[1];\r\n      if (!token) {\r\n        return res.status(statusCodes.forbidden).json({ error: 'No token provided' });\r\n      }\r\n\r\n      const user = TokenOperations.verify(token);\r\n      if (!user) {\r\n        return res.status(statusCodes.unAuthorized).json({ error: 'Invalid token provided' });\r\n      }\r\n      req.user = user;\r\n      return next();\r\n    }\r\n    return res.status(statusCodes.unAuthorized).json({ error: 'No token provided' });\r\n  },\r\n};\r\n\r\nexport default Authentication;\r\n"],"file":"authentication.js"}