{"version":3,"sources":["../../server/test/auth_user_test.js"],"names":["chai","use","chaiHttp","describe","userData","user","firstName","lastName","password","email","user_2","user400","userEmail400","userTrimInput400","login","logInTrimInput400","login400","login401","it","done","request","app","post","send","end","err","res","body","to","be","an","have","property","status"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport chai, { expect } from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../index';\r\n\r\nchai.use(chaiHttp);\r\n\r\n\r\ndescribe('test for authentication (sign up and sign in) endpoints', () => {\r\n  const userData = {\r\n    user: {\r\n      firstName: 'test-firstname',\r\n      lastName: 'test-lastname',\r\n      password: 'password1234',\r\n      email: 'email@gmail.com',\r\n    },\r\n    user_2: {\r\n      firstName: 'test-2-firstname',\r\n      lastName: 'test-2-lastname',\r\n      password: 'password1234',\r\n      email: 'email@gmail.com',\r\n    },\r\n    user400: {\r\n      firstName: 'femi',\r\n      lastName: 'james',\r\n      email: 'email@gmail.com',\r\n    },\r\n    userEmail400: {\r\n      firstName: 'femi',\r\n      lastName: 'james',\r\n      email: 'emailgmail.com',\r\n    },\r\n    userTrimInput400: {\r\n      firstName: '     ',\r\n      lastName: '     ',\r\n      email: 'email@gmail.com',\r\n      password: '      ',\r\n    },\r\n    login: {\r\n      email: 'email@gmail.com',\r\n      password: 'password1234',\r\n    },\r\n    logInTrimInput400: {\r\n      email: '      ',\r\n      password: '      ',\r\n    },\r\n    login400: {\r\n      password: '123',\r\n    },\r\n    login401: {\r\n      email: 'denteal@gmail.com',\r\n      password: 'password1234',\r\n    },\r\n\r\n  };\r\n  describe('POST /auth/signup Success', () => {\r\n    it('should create a single user', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userData.user)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('data');\r\n          expect(res).to.have.status(201);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('POST /auth/signup Email Conflict', () => {\r\n    it('should not create a user', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userData.user_2)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('errors');\r\n          expect(res).to.have.status(409);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('POST /auth/signup Bad Request Incomplete Payload', () => {\r\n    it('should not create a user', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userData.user400)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('errors');\r\n          expect(res).to.have.status(400);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('POST /auth/signup Bad Request Invalid Email', () => {\r\n    it('should not create a user', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userData.userEmail400)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('errors');\r\n          expect(res).to.have.status(400);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('POST /auth/signup Bad Request Invalid Input', () => {\r\n    it('should create a single user', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userData.userTrimInput400)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('errors');\r\n          expect(res).to.have.status(400);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('POST /auth/signin Bad Request', () => {\r\n    it('should return a 400 error for incomplete payload', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(userData.login400)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('errors');\r\n          expect(res).to.have.status(400);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('POST /auth/signin Invalid Credentials', () => {\r\n    it('should return a 401 for invalid request payload (email and password)', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(userData.login401)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('error');\r\n          expect(res).to.have.status(401);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('POST /auth/signin Success', () => {\r\n    it('should log a user in successfully', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(userData.login)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('data');\r\n          expect(res).to.have.status(200);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('POST /auth/signin Bad Request', () => {\r\n    it('should give a 400 Bad Bad request error', (done) => {\r\n      chai.request(app)\r\n        .post('/api/v1/auth/signin')\r\n        .send(userData.logInTrimInput400)\r\n        .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body).to.have.property('errors');\r\n          expect(res).to.have.status(400);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"file":"auth_user_test.js"}