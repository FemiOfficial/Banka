{"version":3,"sources":["../../server/services/user.services.js"],"names":["UserService","Users","email","reqUser","find","user"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;IAMMA,W;;;;;;;;;;AACJ;;;;;;;;;;;;;;;iDASSC,iB;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;qDAQqBC,K;;;;;;AACbC,gBAAAA,O,GAAUF,kBAAMG,IAAN,CAAW,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACH,KAAL,KAAeA,KAAnB;AAAA,iBAAf,C;;oBACXC,O;;;;;kDACI,K;;;kDAEFA,O;;;;;;;;;;;;;;;;;;;;eAIIH,W","sourcesContent":["import Users from '../utils/db/users.data';\r\n\r\n/**\r\n *\r\n * @class UserService\r\n *\r\n */\r\n\r\nclass UserService {\r\n  /**\r\n   *\r\n    * @static\r\n    * @memberof UserService\r\n    * @returns {Object} Users\r\n    *\r\n    */\r\n\r\n  static async getAllUsers() {\r\n    return Users;\r\n  }\r\n\r\n  /**\r\n   *\r\n    * @static\r\n    * @memberof UserService\r\n    * @returns {Object} reqUser: the user the corresponds to the id parameter\r\n    *\r\n    */\r\n\r\n  static async getUser(email) {\r\n    const reqUser = Users.find(user => user.email === email);\r\n    if (!reqUser) {\r\n      return false;\r\n    }\r\n    return reqUser;\r\n  }\r\n}\r\n\r\nexport default UserService;\r\n"],"file":"user.services.js"}