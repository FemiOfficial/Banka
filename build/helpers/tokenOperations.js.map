{"version":3,"sources":["../../server/helpers/tokenOperations.js"],"names":["TokenOperations","user","secretKey","jwt","sign","expiresIn","authToken","token","decode","config"],"mappings":";;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAHA;;AAKA;;;;;;IAQMA,e;;;;;;;;;;;;oDACeC,I,EAAMC,S;;;;;;;uBACCC,yBAAIC,IAAJ,CACtBH,IADsB,EAChBC,SADgB,EAEtB;AAAEG,kBAAAA,SAAS,EAAE;AAAb,iBAFsB,C;;;AAAlBC,gBAAAA,S;kEAIWA,S;;;;;;;;;;;;;;;;;;;;;qDAGCC,K;;;;;;kDAETJ,yBAAIK,MAAJ,CAAWD,KAAX,EAAkBE,mBAAOP,SAAzB,C;;;;;kDAEA,I;;;;;;;;;;;;;;;;;;;;eAKEF,e","sourcesContent":["/* eslint-disable consistent-return */\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/config';\r\nimport statusCodes from \"./statusCodes\";\r\n\r\n/**\r\n *\r\n * @class TokenOperations\r\n * @description handles all token operation (sign, verify)\r\n *\r\n */\r\n\r\n\r\nclass TokenOperations {\r\n  static async token(user, secretKey) {\r\n    const authToken = await jwt.sign(\r\n      user, secretKey,\r\n      { expiresIn: '5d' },\r\n    );\r\n    return `Bearer ${authToken}`;\r\n  }\r\n\r\n  static async verify(token) {\r\n    try {\r\n      return jwt.decode(token, config.secretKey);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TokenOperations;\r\n"],"file":"tokenOperations.js"}